name: Pixel 7/7 Pro Kernel Build

on:
  workflow_dispatch:
    inputs:
      enable_lxc:
        description: "Apply GKI-LXC patches?"
        required: true
        default: "false"
        type: boolean
      enable_kernelsu:
        description: "Enable KernelSU?"
        required: true
        default: "false"
        type: boolean

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git curl wget unzip bc bison build-essential flex gcc clang lld \
          libssl-dev libncurses5-dev libncursesw5-dev python3 python3-pip \
          rsync ccache zip repo

    # Sync Pixel 7/7 Pro kernel source
    - name: Sync Pixel Kernel
      run: |
        mkdir pixel-kernel && cd pixel-kernel
        repo init --depth=1 -u https://android.googlesource.com/kernel/manifest -b android-gs-pantah-6.1-android16
        repo sync -j$(nproc)
        cd ..

    # Apply GKI-LXC patches (optional)
    - name: Clone gki-lxc
      if: ${{ inputs.enable_lxc == true }}
      run: git clone https://github.com/TapetalArray/gki-lxc

    - name: Apply GKI-LXC patches
      if: ${{ inputs.enable_lxc == true }}
      run: |
        cp ./gki-lxc/gki_defconfig ./pixel-kernel/private/gs-google/arch/arm64/configs/gki_defconfig
        cd pixel-kernel/private/gs-google
        git apply ../../../gki-lxc/*.patch || true
        cd ../../..

    # Enable KernelSU (optional)
    - name: Enable KernelSU
      if: ${{ inputs.enable_kernelsu == true }}
      run: |
        cd pixel-kernel/private/gs-google
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
        cd ../../..

    - name: Build Kernel
      run: |
       cd pixel-kernel
       if [ -f "private/gs-google/build.config.gki.aarch64" ]; then
         BUILD_CONFIG=private/gs-google/build.config.gki.aarch64
       elif [ -f "kernel/google/gs/build.config.gki.aarch64" ]; then
         BUILD_CONFIG=kernel/google/gs/build.config.gki.aarch64
       else
         echo "Error: build.config.gki.aarch64 not found!"
         exit 1
       fi
       LTO=thin BUILD_CONFIG=$BUILD_CONFIG ./build/build.sh
       cd ..

    # Create boot.img
    - name: Create boot.img
      run: |
        cd pixel-kernel
        wget https://dl.google.com/android/gki/gki-certified-boot-android12-5.10-2023-05_r8.zip -P ..
        unzip -q ../gki-certified-boot-android12-5.10-2023-05_r8.zip
        ./tools/mkbootimg/unpack_bootimg.py --boot_img ../boot-5.10.img
        ./tools/mkbootimg/mkbootimg.py \
          --header_version 4 \
          --kernel out/*/dist/Image \
          --ramdisk out/ramdisk \
          --os_version 13.0.0 \
          --os_patch_level 2023-11 \
          -o ../pixel7pro-android13-boot.img
        cd ..

    # Package with AnyKernel3
    - name: Package Kernel with AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3.git
        cp pixel-kernel/out/*/dist/Image ./AnyKernel3/
        cd AnyKernel3
        zip -r9 ../Pixel7Pro-android13.zip *

    # Upload artifacts
    - name: Upload Kernel
      uses: actions/upload-artifact@v4
      with:
        name: Pixel7Pro-Kernel
        path: |
          pixel7pro-android13-boot.img
          Pixel7Pro-android13.zip
